generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id        String   @id @default(uuid())
  name      String
  dob       DateTime
  insurance String?
  visits    Visit[]
}

model Visit {
  id          String      @id @default(uuid())
  patientId   String
  status      VisitStatus @default(IN_PROGRESS)
  type        VisitType
  date        DateTime
  time        String?
  specialty   Specialty
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  doctorId    String?
  submittedBy String?
  doctorName  String?
  soapNote    SoapNote?   @relation("VisitToSoapNote")
  patient     Patient     @relation(fields: [patientId], references: [id])
}

model SoapNote {
  id        String             @id @default(uuid())
  visitId   String             @unique
  content   String
  visit     Visit              @relation("VisitToSoapNote", fields: [visitId], references: [id])
  revisions SoapNoteRevision[]
}

model SoapNoteRevision {
  id          String                @id @default(uuid())
  soapNoteId  String
  content     String
  embedding   Unsupported("vector")
  createdAt   DateTime              @default(now())
  contentHash String?               @unique
  metadata    Json?
  decisionSet CodeDecisionSet?      @relation("RevisionToDecisionSet")
  soapNote    SoapNote              @relation(fields: [soapNoteId], references: [id])
  suggestions SuggestedCode[]
}

model SuggestedCode {
  id         String           @id @default(uuid())
  revisionId String
  code       String
  codeType   String
  confidence Float
  createdAt  DateTime         @default(now())
  revision   SoapNoteRevision @relation(fields: [revisionId], references: [id])
}

model CodeDecisionSet {
  id             String           @id @default(uuid())
  revisionId     String           @unique
  revision       SoapNoteRevision @relation("RevisionToDecisionSet", fields: [revisionId], references: [id])
  finalizedCodes FinalizedCode[]
  manualCodes    ManualCode[]
  rejectedCodes  RejectedCode[]
}

model FinalizedCode {
  id            String          @id @default(uuid())
  decisionSetId String
  code          String
  codeType      String
  source        String
  createdAt     DateTime        @default(now())
  decisionSet   CodeDecisionSet @relation(fields: [decisionSetId], references: [id])
}

model RejectedCode {
  id            String          @id @default(uuid())
  decisionSetId String
  code          String
  codeType      String
  reason        String
  createdAt     DateTime        @default(now())
  decisionSet   CodeDecisionSet @relation(fields: [decisionSetId], references: [id])
}

model ManualCode {
  id            String          @id @default(uuid())
  decisionSetId String
  code          String
  codeType      String
  addedBy       String
  createdAt     DateTime        @default(now())
  decisionSet   CodeDecisionSet @relation(fields: [decisionSetId], references: [id])
}

enum VisitStatus {
  IN_PROGRESS
  READY_TO_BILL
}

enum VisitType {
  OFFICE_VISIT
  CONSULTATION
  FOLLOW_UP
  ANNUAL_EXAM
  URGENT_CARE
  TELEMEDICINE
  PROCEDURE
  SURGERY
  OTHER
}

enum Specialty {
  CARDIOLOGY
  DERMATOLOGY
  ORTHOPEDICS
  PEDIATRICS
  PSYCHIATRY
  FAMILY_MEDICINE
  INTERNAL_MEDICINE
  OTHER
}
